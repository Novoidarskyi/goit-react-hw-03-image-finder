{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.jsx","components/Button/Button.jsx","components/Error/Error.js","service/api.js","App.js","index.js","components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css"],"names":["module","exports","Modal","largeImageURL","pictureName","onClickModal","onChange","className","css","overlay","onClick","onKeyDown","modal","src","alt","ImageGalleryItem","state","id","props","url","status","openModal","setState","onClickCloseModal","handleKeyPressESC","e","key","window","addEventListener","this","removeEventListener","imageGalleryItem","imageGalleryItemImage","Component","ImageGallery","images","map","webformatURL","Searchbar","inputValue","handleNameChange","target","value","toLowerCase","handleSubmit","preventDefault","trim","onSubmit","toast","error","searchbar","searchForm","type","searchFormButton","searchFormButtonLabel","searchFormInput","autoComplete","autoFocus","placeholder","position","toastOptions","duration","style","border","width","Button","onClickImage","button","Error","message","fetchImage","fetch","then","response","ok","json","Promise","reject","BASE_URL","KEY_API","App","page","handleFormSubmit","imageTotalList","prevState","res","hits","prevProps","catch","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","color","height","loader","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.044b4802.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__12ECz\",\"modal\":\"Modal_modal__3POGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__mVp1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1qSXL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1nKSE\"};","import PropTypes from 'prop-types';\r\nimport css from './Modal.module.css'\r\n\r\n\r\n\r\nconst Modal = ({ largeImageURL, pictureName, onClickModal, onChange }) => {\r\n  return (\r\n    <div className={css.overlay} onClick={onClickModal} onKeyDown={onChange}>\r\n  <div className={ css.modal}>\r\n        <img src={largeImageURL} alt={pictureName } />\r\n  </div>\r\n</div>\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  pictureName: PropTypes.string.isRequired,\r\n  onClickModal: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default Modal\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport css from './ImageGalleryItem.module.css'\r\nimport Modal from \"components/Modal\"\r\n\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  state = {\r\n    id: this.props.id,\r\n    url: this.props.url,\r\n    largeImageURL: this.props.largeImageURL,\r\n    pictureName: this.props.pictureName,\r\n    status: 'idle'\r\n  }\r\n\r\n  // Метод добавления слушателя keydown на window\r\n\r\n  componentDidMount() {   \r\n    window.addEventListener('keydown', this.handleKeyPressESC);\r\n  }\r\n\r\n  // Метод снятия слушателя keydown с window\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPressESC);\r\n  }\r\n\r\n  // Метод для открытия модального окна\r\n\r\n  openModal = () => {\r\n    this.setState({ status: 'resolved' })\r\n  }\r\n\r\n   // Метод для закрытия модального окна по клику мышки\r\n  \r\nonClickCloseModal = () => { \r\n    this.setState({status: 'idle'})\r\n  }\r\n\r\n// Метод для закрытия модального окна по нажатию клавиши Escape\r\n  \r\n  handleKeyPressESC = e => {    \r\n    if (e.key === \"Escape\") { this.setState({status: 'idle'}) }\r\n  };\r\n\r\n\r\n  render() {\r\n    const {id, url, largeImageURL, pictureName, status } = this.state\r\n\r\n    if (status === 'idle') {\r\n      return  <>\r\n     <li key = {id} className={css.imageGalleryItem}>\r\n          <img src={url} alt={pictureName} className={css.imageGalleryItemImage} onClick={ this.openModal} />\r\n        </li>       \r\n        </>\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return  <Modal largeImageURL={largeImageURL} pictureName={ pictureName} onClickModal={this.onClickCloseModal} onChange={this.handleKeyPressESC } />\r\n    }    \r\n  }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    pictureName: PropTypes.string.isRequired,\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from 'components/ImageGalleryItem';\r\nimport css from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({ images, pictureName }) => {\r\n \r\n  return (\r\n    <ul className={css.ImageGallery}>\r\n      {images.map(({ id, webformatURL, largeImageURL }) => (\r\n        <ImageGalleryItem id={id} url={webformatURL} largeImageURL = {largeImageURL} pictureName ={pictureName} />\r\n             ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object.isRequired,).isRequired,\r\n  pictureName: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default ImageGallery;\r\n\r\n","import { Component } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport PropTypes from \"prop-types\";\r\nimport css from './Searchbar.module.css';\r\n\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    inputValue: ''\r\n  };\r\n\r\n\r\n  // Метод для передачи значения input в state\r\n  \r\nhandleNameChange= e => {\r\n  this.setState({inputValue: e.target.value.toLowerCase()})\r\n}\r\n\r\n  // Метод для передачи state из  Searchbar в App\r\n\r\nhandleSubmit = e => {\r\n  e.preventDefault();\r\n  if(this.state.inputValue.trim() === '')\r\n  {\r\n    toast.error('Введите запрос для поиска изображений!');\r\n    return\r\n  }\r\n    this.props.onSubmit(this.state.inputValue);\r\n  this.setState({inputValue: ''});\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n    <header className={css.searchbar}>\r\n      <form className={css.searchForm} onSubmit={this.handleSubmit}>\r\n        <button type=\"submit\" className={css.searchFormButton}>\r\n          <span className={css.searchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={css.searchFormInput}\r\n          type=\"text\"         \r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          value={this.state.inputValue}\r\n          placeholder=\"Search images and photos\"\r\n          onChange={this.handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n    <Toaster position=\"top-center\" toastOptions={{ duration: 1500, style: {border: '1px solid royalblue', width: '500px'}}} />\r\n    </>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\nonSubmit: PropTypes.func.isRequired,  \r\n}","import PropTypes from 'prop-types';\r\nimport css from './Button.module.css';\r\n\r\nconst Button = ({ onClickImage }) => {\r\n  return (\r\n    <button className={css.button} type = \"button\"  onClick={onClickImage}> Load more </button>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n onClickImage: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button\r\n\r\n","import PropTypes from 'prop-types';\n\nconst Error = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","function fetchImage(url) {\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`Нет изображений с запросом ${this.state.pictureName}`),\n    );\n  });\n}\n\nexport default fetchImage;\n","import React, { Component } from 'react';\nimport './App.css';\nimport ImageGallery from 'components/ImageGallery';\nimport Searchbar from 'components/Searchbar';\nimport Loader from 'react-loader-spinner';\nimport css from 'components/Loader/Loader.module.css';\nimport Button from 'components/Button';\nimport Error from 'components/Error';\nimport fetchImage from './service/api';\n\nconst BASE_URL = 'https://pixabay.com/api';\nconst KEY_API = '21851432-4720cbd8c8a1bfa0aa0ff2c82&';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    pictureName: '',\n    page: 1,\n    error: null,\n    status: 'idle',\n  };\n\n  // Метод для рендера страницы при первой загрузке\n\n  componentDidMount() {\n    const url = `${BASE_URL}/?q=${this.state.pictureName}&page=${this.state.page}&key=${KEY_API}&image_type=photo&orientation=horizontal&per_page=12`;\n    this.setState({ status: 'pending' });\n    fetch(url)\n      .then(res => res.json())\n      .then(images =>\n        this.setState({ images: images.hits, status: 'resolved' }),\n      );\n  }\n\n  // Метод для обновления страницы при запросе от клиента\n\n  componentDidUpdate(prevProps, prevState) {\n    const url = `${BASE_URL}/?q=${this.state.pictureName}&page=${this.state.page}&key=${KEY_API}&image_type=photo&orientation=horizontal&per_page=12`;\n    if (prevState.pictureName !== this.state.pictureName) {\n      this.setState({ status: 'pending', images: [], page: 1 });\n      fetchImage(url)\n        .then(images =>\n          this.setState({ images: images.hits, status: 'resolved' }),\n        )\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n    if (prevState.page !== this.state.page) {\n      fetchImage(url)\n        .then(images =>\n          this.setState(prevState => ({\n            images: [...prevState.images, ...images.hits],\n            status: 'resolved',\n          })),\n        )\n        .catch(error => this.setState({ error, status: 'rejected' }))\n        .finally(() => {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        });\n    }\n  }\n\n  // Метод для получения введеного значения для поиска от клиента в Searchbar\n\n  handleFormSubmit = pictureName => {\n    this.setState({ pictureName });\n  };\n\n  // Метод для добавления изображений на странице при нажатии клиентом кнопки Load more\n\n  imageTotalList = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n\n  render() {\n    const { images, pictureName, error, status } = this.state;\n\n    if (status === 'idle') {\n      return (\n        <div className=\"App\">\n          <Searchbar onSubmit={this.handleFormSubmit} />;\n          <ImageGallery images={images} pictureName={pictureName} />\n        </div>\n      );\n    }\n\n    if (status === 'pending') {\n      return (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={150}\n          width={150}\n          className={css.loader}\n        />\n      );\n    }\n\n    if (status === 'rejected') {\n      return <Error message={error.message} />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <div className=\"App\">\n          <Searchbar onSubmit={this.handleFormSubmit} />;\n          <ImageGallery images={images} pictureName={pictureName} />\n          {images.length > 0 && <Button onClickImage={this.imageTotalList} />}\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__AomN_\",\"searchForm\":\"Searchbar_searchForm__29msW\",\"searchFormButton\":\"Searchbar_searchFormButton__3jAeD\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__2sQxp\",\"searchFormInput\":\"Searchbar_searchFormInput__2tiDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__3phr0\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__2aN1Y\"};"],"sourceRoot":""}